version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: kospot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - kospot-network

  app:
    image: kospot-backend:latest
    container_name: kospot-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Spring Profile
      - SPRING_PROFILES_ACTIVE=prod
      
      # Database Configuration (RDS)
      # application.yml의 플레이스홀더와 일치시킴
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      
      # OAuth2 Configuration
      - OAUTH_GOOGLE_CLIENT_ID=${OAUTH_GOOGLE_CLIENT_ID}
      - OAUTH_GOOGLE_CLIENT_SECRET=${OAUTH_GOOGLE_CLIENT_SECRET}
      - OAUTH_NAVER_CLIENT_ID=${OAUTH_NAVER_CLIENT_ID}
      - OAUTH_NAVER_CLIENT_SECRET=${OAUTH_NAVER_CLIENT_SECRET}
      - OAUTH_KAKAO_CLIENT_ID=${OAUTH_KAKAO_CLIENT_ID}
      - OAUTH_KAKAO_CLIENT_SECRET=${OAUTH_KAKAO_CLIENT_SECRET}
      
      # AWS Configuration
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_REGION=${AWS_REGION}
      
      # AWS S3 Buckets
      # 이미지 저장용 버킷 (배너, 포토모드, 아이템 등)
      - S3_BUCKET=${S3_BUCKET}
      
      # Application Configuration
      - SERVER_PORT=${SERVER_PORT:-8080}
      
      # CORS Configuration
      - CORS_FRONT_URL=${CORS_FRONT_URL}
      
      # WebSocket Configuration
      - WEBSOCKET_ALLOWED_ORIGINS=${WEBSOCKET_ALLOWED_ORIGINS}
      
      # AES Encryption
      - AES_SECRET_KEY=${AES_SECRET_KEY}
      
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - kospot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis-data:
    driver: local

networks:
  kospot-network:
    driver: bridge

