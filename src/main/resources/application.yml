spring:
  mvc:
    servlet:
      path: /api
  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?serverTimezone=UTC
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD:}

  jpa:
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true
        show_sql: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            scope:
              - email
          naver:
            client-id: ${OAUTH_NAVER_CLIENT_ID}
            client-secret: ${OAUTH_NAVER_CLIENT_SECRET}
            scope: email
          kakao:
            client-id: ${OAUTH_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH_KAKAO_CLIENT_SECRET}
            scope: account_email

server:
  port: ${SERVER_PORT:8080}

logging:
  level:
    root: info
    org.springframework.web: info

app:
  jwt:
    secret: ${JWT_SECRET}
  cors:
    front-path: ${CORS_FRONT_URL}

aes:
  secret-key: ${AES_SECRET_KEY}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${S3_BUCKET}

websocket:
  allowed-origins: ${WEBSOCKET_ALLOWED_ORIGINS}
